FROM debian:11

ARG TARGETPLATFORM
ENV RUSTUP_HOME=/usr/local/rustup \
    CARGO_HOME=/usr/local/cargo \
    PATH=/usr/local/cargo/bin:$PATH \
    DEBIAN_FRONTEND=noninteractive

RUN apt-get update \
    && apt-get -y install \
        pkg-config \
        curl \
        wget \
        lsb-release \
        libelf-dev \
        build-essential \
        linux-headers-generic \
        software-properties-common \
        gnupg2 \
    && wget https://apt.llvm.org/llvm.sh && chmod +x llvm.sh && ./llvm.sh 14 && rm -f ./llvm.sh \
    && apt-get -y install "linux-image-$(ls /lib/modules)" \
    && apt-get clean -y

RUN ln -sf /usr/bin/llvm-config-14 /usr/bin/llvm-config
RUN llvm-config --version | grep -q '^14'

# Install current stable Rust. The first goal of RedBPF build test is to
# support latest Rust release.
RUN curl https://sh.rustup.rs -sSf > rustup.sh \
    && sh rustup.sh -y \
          --default-toolchain stable \
          --profile minimal \
          --no-modify-path \
    && rm -f rustup.sh \
    && rustup component add rustfmt \
    && rustup --version \
    && cargo -vV \
    && rustc -vV

COPY extract-btf-aarch64.rs .

RUN if [ x$TARGETPLATFORM = x"linux/arm64" ]; then \
      rustc extract-btf-aarch64.rs \
      && ./extract-btf-aarch64 /boot/vmlinuz-* /boot/vmlinux-btf; \
    else \
      wget https://raw.githubusercontent.com/torvalds/linux/master/scripts/extract-vmlinux \
      && sh extract-vmlinux /boot/vmlinuz-* > /boot/vmlinux \
      && rm -f extract-vmlinux; \
    fi
    
RUN rm -f extract-btf-aarch64.rs

WORKDIR /build
